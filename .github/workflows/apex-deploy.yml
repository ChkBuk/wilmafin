name: Query SYSDATE from Oracle Autonomous DB

on: [push]
permissions:
  contents: read 
jobs:
  query-sysdate:
    environment: Development
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Public Repo
        uses: actions/checkout@v4
        
      - name: Checkout Private Wallet Repo
        uses: actions/checkout@v4
        with:
          repository: ChkBuk/secretsrepo
          path: oci_wallet
          token: "${{ secrets.ACCESS_TOKEN }}"

      - name: Debug Wallet Structure
        run: |
          echo "===== Wallet Contents ====="
          ls -R oci_wallet/  # Recursive listing

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Install SQLcl 
        run: |
          # Cleanup previous installs
          rm -rf ~/sqlcl
          
          # Download and extract
          mkdir -p ~/sqlcl
          cd ~/sqlcl
          curl -L -o sqlcl.zip https://download.oracle.com/otn_software/java/sqldeveloper/sqlcl-latest.zip
          unzip -q sqlcl.zip
          rm sqlcl.zip
          
          # Handle nested directory (common in Oracle downloads)
          if [ -d "sqlcl" ]; then
            mv sqlcl/* .
            rmdir sqlcl
          fi
          
          # Verify installation
          echo "SQLcl version:"
          ~/sqlcl/bin/sql -version
          
          # Add to PATH
          echo "$HOME/sqlcl/bin" >> $GITHUB_PATH

      - name: Configure Wallet
        run: |
          WALLET_DIR="$HOME/wallet"
          mkdir -p "$WALLET_DIR"
          
          # Copy wallet files (handle nested dirs)
          cp -r oci_wallet/* "$WALLET_DIR/" || cp -r oci_wallet/oci_wallet/* "$WALLET_DIR/"

          echo "===== Wallet Direcroy ====="
          ls -R $WALLET_DIR/  # Recursive listing
          

      - name: Set Environment Variables
        run: |
          echo "TNS_ADMIN=$HOME/wallet/oci_wallet" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$HOME/wallet" >> $GITHUB_ENV  # Needed for Linux

      - name: Test Connection
        env:
          ORACLE_USER: ${{ secrets.DB_USER }}
          ORACLE_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_ALIAS: ${{ secrets.DB_ALIAS }}  # e.g., "myadb_high"
        run: |
          echo "Testing connection to $DB_ALIAS..."
          $HOME/sqlcl/bin/sql -v /nolog <<EOF
          set cloudconfig $TNS_ADMIN
          connect $ORACLE_USER/$ORACLE_PASSWORD@$DB_ALIAS
          SELECT 'Success! SYSDATE: ' || TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS') FROM DUAL;
          exit;
          EOF
