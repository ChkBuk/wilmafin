name: Query SYSDATE from Oracle Autonomous DB

on: [push]
permissions:
  contents: read 
jobs:
  query-sysdate:
    environment: Development
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Public Repo
        uses: actions/checkout@v4
        
      - name: Print variables
        run: |
          echo ${{ secrets.ACCESS_TOKEN }}
          
      - name: Checkout private wallet repo
        uses: actions/checkout@v4
        with:
          repository: ChkBuk/secretsrepo
          path: oci_wallet
          token: "${{ secrets.ACCESS_TOKEN }}"

      - name: Checkout private wallet repo
        uses: actions/checkout@v4
        with:
          repository: ChkBuk/secretsrepo
          path: oci_wallet
          token: "${{ secrets.ACCESS_TOKEN }}"
      
      - name: Debug Wallet Structure
        run: |
          echo "===== Repository Structure ====="
          find . -type d | sort
          
          echo "===== oci_wallet Contents ====="
          if [ -d "oci_wallet/oci_wallet" ]; then
            echo "⚠️ Nested oci_wallet directory found!"
            ls -la oci_wallet/oci_wallet/
          else
            ls -la oci_wallet/
          fi
    
     
          
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Install SQLcl
        run: |
          curl -L -o sqlcl.zip https://download.oracle.com/otn_software/java/sqldeveloper/sqlcl-latest.zip
          unzip sqlcl.zip -d sqlcl

      - name: Configure Wallet
        run: |
          mkdir -p $HOME/wallet
          cp -r oci_wallet/oci_wallet/* $HOME/wallet/
          sed -i 's|?/network/admin|$TNS_ADMIN|g' $HOME/wallet/sqlnet.ora
        shell: bash

      - name: Set Env Variables
        run: |
          echo "TNS_ADMIN=$HOME/wallet" >> $GITHUB_ENV
          echo "PATH=$PATH:$(pwd)/sqlcl/bin" >> $GITHUB_ENV

      - name: Query SYSDATE
        run: |
          echo "SELECT SYSDATE FROM DUAL;" > query.sql
          sql ${DB_USER}/${DB_PASSWORD}@${DB_ALIAS} @query.sql
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_ALIAS: ${{ vars.DB_ALIAS }}
